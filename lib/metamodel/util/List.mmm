/* A generic list of elements (see java.util.List).

Metropolis: Design Environment for Heterogeneus Systems.

Copyright (c) 1998-2005 The Regents of the University of California.
All rights reserved.

Permission is hereby granted, without written agreement and without
license or royalty fees, to use, copy, modify, and distribute this
software and its documentation for any purpose, provided that the
above copyright notice and the following two paragraphs appear in all
copies of this software and that appropriate acknowledgments are made
to the research of the Metropolis group.

IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY
FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGE.

THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
CALIFORNIA HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
ENHANCEMENTS, OR MODIFICATIONS.

METROPOLIS_COPYRIGHT_VERSION_1
COPYRIGHTENDKEY

*/

package metamodel.util;


public interface List extends Collection
{

    /**
     */
    int size();

    /**
     */
    boolean isEmpty();

    /**
     */
    boolean contains(Object arg0);

    /**
     */
    Iterator iterator();

    /**
     */
    Object[] toArray();

    /**
     */
    Object[] toArray(Object[] arg0);

    /**
     */
    boolean add(Object arg0);

    /**
     */
    boolean remove(Object arg0);

    /**
     */
    boolean containsAll(Collection arg0);

    /**
     */
    boolean addAll(Collection arg0);

    /**
     */
    boolean addAll(int arg0, Collection arg1);

    /**
     */
    boolean removeAll(Collection arg0);

    /**
     */
    boolean retainAll(Collection arg0);

    /**
     */
    void clear();

    /**
     */
    boolean equals(Object arg0);

    /**
     */
    int hashCode();

    /**
     */
    Object get(int arg0);

    /**
     */
    Object set(int arg0, Object arg1);

    /**
     */
    void add(int arg0, Object arg1);

    /**
     */
    Object remove(int arg0);

    /**
     */
    int indexOf(Object arg0);

    /**
     */
    int lastIndexOf(Object arg0);

    /**
     */
    ListIterator listIterator();

    /**
     */
    ListIterator listIterator(int arg0);

    /**
     */
    List subList(int arg0, int arg1);
}
