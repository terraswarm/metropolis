$Id: README.txt,v 1.2 2004/06/04 06:26:09 tcm Exp $

This directory contains models, object files, and a supporting
simulator for ARM microarchitectural models specified in metropolis
that execute on the SystemC Simulator. 

Directory summary:
===========================
arm_sim      -  A modified version of the ARMulator.
                The original is under the GNU Public License.
		arm_sim is made available in case developers would
		like to create their own traces.

object_files - traces generated by arm_sim, and the c-code used to
generate them.

strong_arm  - A microarchitectural yapi-based model of the strongarm processor. 

xscale_yapi - A microarchitectural yapi-based model of the xscale processor.


Building and Running the Processor Models
==========================================
Building the Models:
  - go into the appropriate xscale or strongarm directory
    - type "make"
      - For a build with detailed debug messages type "make debug"

Running the model on a trace:
  - run the appropriate executable on a trace file
    - For example. "xscaled.x ../object_files/arith.tr" would execute
the debug-version of the xscale model on the arithmetic trace file
generated by the arith.c c-file.
(Note: if no trace file is specified it defaults to the 
"trace.txt" file)


Generating New Traces
=========================
The traces were created by running the modified ISS found in the
arm_sim directory on a stand-alone (i.e. No OS)  executable file 
of the ELF format. Here are instructions for generating the compiler.

Building the Toolchain:
1. GNUPRO Tools - Download and install the binaries of GNUpro toolkit
for the xscale processor targeted at ELF binary files from: 
                 http://www.intel.com/design/intelxscale/dev_tools/020523/
 - uncompress it to an installation directory (e.g. ~/bin)
 - add the bin directory inside the installation directory to your path.
2. ARM-ISS - Enter the arm-sim direcotry and type make to generate the arm-simulator.

Creating A New Trace:
1. Compile the file using the gnu-pro tools 
   (e.g. "xscale-elf-gcc fib.c -o fib")
2. Generate a trace using the arm-simulator: 
   (e.g. "arm-sim fib tracefib.tr")
